name: Tests

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

permissions:
  contents: read
  pull-requests: write

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'
          cache: true

      - name: Install dependencies
        run: |
          go mod download
          cd client && go mod download

      - name: Run tests for plane
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run tests for client
        working-directory: client
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.txt,./client/coverage.txt
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  test-web:
    name: Test Web Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check if web directory exists
        id: check-web
        run: |
          if [ -f "web/package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ web/package.json not found, skipping web tests"
          fi

      - name: Setup Node.js
        if: steps.check-web.outputs.exists == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package.json

      - name: Install dependencies
        if: steps.check-web.outputs.exists == 'true'
        working-directory: web
        run: npm ci

      - name: Run linter
        if: steps.check-web.outputs.exists == 'true'
        working-directory: web
        run: npm run lint

      - name: Build
        if: steps.check-web.outputs.exists == 'true'
        working-directory: web
        run: npm run build

